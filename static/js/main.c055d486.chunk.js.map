{"version":3,"sources":["hooks/useStartups.js","pages/StartupList.js","pages/Landing.js","hooks/useName.js","pages/StartupByName.js","pages/SearchName.js","pages/SearchUUID.js","pages/CreateStartup.js","pages/AddPosition.js","pages/AddImg.js","App.js","reportWebVitals.js","index.js"],"names":["GET_STARTUPS","gql","StartupList","useQuery","error","loading","data","console","log","useStartups","JSON","stringify","className","Navbar","fixed","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","Link","getAllStartups","map","startup","to","name","src","img","alt","Landing","navigate","useNavigate","routeChange","x","Stack","spacing","onClick","GET_STARTUPS_NAME","StartupByName","variables","useName","useParams","getStartupByName","uuid","SearchName","useState","setName","useLazyQuery","getName","called","value","onChange","e","target","GET_STARTUPS_UUID","SearchUUID","getUUID","placeholder","getStartupByUUID","CREATE_STARTUP","CreateStartup","website","type","useMutation","createStartup","onSubmit","preventDefault","ref","ADD_POSITION","AddPosition","title","experience","addPosition","AddImg","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.c055d486.chunk.js","sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\n\nconst GET_STARTUPS = gql`\n\tquery {\n\t\tgetAllStartups {\n\t\t\tname\n\t\t\timg\n\t\t}\n\t}\n`;\n\nexport const useStartups = () => {\n\tconst { error, loading, data } = useQuery(GET_STARTUPS);\n\n\tconsole.log({ error, loading, data })\n\treturn {\n\t\terror,\n\t\tloading,\n\t\tdata\n\t};\n}\n","import React from 'react'\nimport \"../index.css\";\nimport { useStartups } from '../hooks/useStartups'\nimport { Link } from \"react-router-dom\"\nimport {Navbar, Nav, Container } from 'react-bootstrap';\n\nexport default function StartupList() {\n\n\tconst { error, loading, data } = useStartups();\n\n\t\tconsole.log({ error, data, loading })\n\n\t\t// console.log({data})\n\t\tif (loading) return <p>Loading...</p>;\n  \t\tif (error) return (\n\t\t\t  console.log(JSON.stringify(error, null, 2)),\n\t\t\t  <p>Error :(</p>\n\t\t  )\n\n\t\treturn (\n\t\t\t<div className=\"StartupsList\">\n\t\t\t\t<Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href=\"/\">StartApp</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t\t\t{data.getAllStartups.map((startup) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<Link to={`/${startup.name}`}>\n\t\t\t\t\t\t\t<img src={startup.img} alt=\"\"/>\n\t\t\t\t\t\t\t<h2>{startup.name}</h2>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n}\n\n\n","import React from 'react'\nimport '../index.css';\nimport { useNavigate } from \"react-router-dom\";\nimport {Navbar, Nav, Container } from 'react-bootstrap';\nimport { Stack } from '@mui/material';\n\n\nexport default function Landing() {\n\tlet navigate = useNavigate();\n\tconst routeChange = (x) => {\n\t  let path = x;\n\t  navigate(path);\n\t};\n\n\treturn (\n\t\t<div className=\"Landing\">\n\t\t\t<Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href=\"/\">StartApp</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t\t<div className=\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-lg flex items-center space-x-4\">\n\t\t\t<div>\n\t\t\t\t<div className=\"text-xl font-medium text-pink\">\n\t\t\t\t\t<Stack spacing={1}>\n\t\t\t\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('list')}>Click to list all startups</button>\n\t\t\t\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('name-search')}>Click to list all startups by name</button>\n\t\t\t\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('uuid-search')}>Click to list all startups by UUID</button>\n\t\t\t\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('create-startup')}>Click to create a startup</button>\n\t\t\t\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('add-position')}>Click to add a position to a startup</button>\n\t\t\t\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('add-img')}>Click to add an image to a startup</button>\n\n\t\t\t\t\t</Stack>\n\t\t\t\t</div>\n\t\t\t\t{/* <p className=\"text-xl font-medium text-pink\">You have a new message!</p> */}\n\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\n\n","import { gql, useQuery } from \"@apollo/client\";\n\nconst GET_STARTUPS_NAME = gql`\nquery startupName($name: String!) {\n\tgetStartupByName(name: $name) {\n\t\tname\n\t\tuuid\n\t}\n}\n`\n\nexport const useName = (name) => {\n\tconst { data, error, loading } = useQuery(GET_STARTUPS_NAME, {\n\t\tvariables: {\n\t\t\tname,\n\t\t},\n\t});\n\tconsole.log({ error, loading, data })\n\n\treturn {\n\t\tdata,\n\t\terror,\n\t\tloading,\n\t};\n}\n","import React from 'react'\nimport { useName } from \"../hooks/useName\"\nimport { useParams, useNavigate } from \"react-router\"\nimport {Navbar, Nav, Container } from 'react-bootstrap';\n\nexport default function StartupByName() {\n\n\tlet navigate = useNavigate();\n\tconst routeChange = (x) => {\n\t  let path = x;\n\t  navigate(path);\n\t};\n\tconst { name } = useParams()\n\n\tconst { error, loading, data } = useName(name);\n\n\tconsole.log({\n\t\terror,\n\t\tloading,\n\t\tdata\n\t})\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return (\n\t\t\tconsole.log(JSON.stringify(error, null, 2)),\n\t\t\t<div>\n\t\t\t\t<p>Error :(</p>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('/')}>Home</button>\n\n\t\t\t</div>\n\t\t\t)\n\treturn (\n\t\t<div className=\"StartupByName\">\n\t\t\t<Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href=\"/\">StartApp</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t\t<p className=\"byName\">name: {data.getStartupByName.name}</p>\n\t\t\t<p>uuid: {data.getStartupByName.uuid}</p>\n\t\t\t<br></br>\n\t\t\t<br></br>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('/')}>Home</button>\n\t\t</div>\n\n\t);\n}\n\n","import React, { useState } from 'react'\nimport { gql, useLazyQuery } from \"@apollo/client\"\nimport { useNavigate } from 'react-router-dom'\nimport {Navbar, Nav, Container } from 'react-bootstrap';\n\nconst GET_STARTUPS_NAME = gql`\n\tquery startupName($name: String!) {\n\t\tgetStartupByName(name: $name) {\n\t\t\tname\n\t\t\tuuid\n\t}\n}\n`\nexport default function SearchName() {\n\tlet navigate = useNavigate();\n\tconst routeChange = (x) => {\n\t  let path = x;\n\t  navigate(path);\n\t};\n\n\tconst [name, setName] = useState(\"\")\n\n\tconst [getName, { loading, error, data, called }] = useLazyQuery(GET_STARTUPS_NAME, {\n\t\tvariables: {\n\t\t\tname\n\t\t}\n\t})\n\n\n\tconsole.log(\n\t\tcalled,\n\t\tloading,\n\t\tdata,\n\t\terror\n\t)\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return (\n\t\t\tconsole.log(JSON.stringify(error, null, 2)),\n\t\t\t<div>\n\t\t\t\t<p>Error :(</p>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('/')}>Home</button>\n\t\t\t</div>\n\t\t\t)\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href=\"/\">StartApp</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t\t<input className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"value={name} onChange={(e) => setName(e.target.value)} />\n\t\t\t<br></br>\n\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => getName()}>Search</button>\n\t\t\t{loading && <div>spinner</div>}\n\t\t\t{error && <div>error :(</div>}\n\t\t\t{data && (\n\t\t\t\t<div className=\"searchName\">\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<p className=\"byName\">name: {data.getStartupByName.name}</p>\n\t\t\t\t\t<p>uuid: {data.getStartupByName.uuid}</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<br></br>\n\t\t\t<br></br>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('/')}>Home</button>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react'\nimport { gql, useLazyQuery } from \"@apollo/client\"\nimport { useNavigate } from 'react-router-dom'\nimport {Navbar, Nav, Container } from 'react-bootstrap';\nimport '../index.css';\n\nconst GET_STARTUPS_UUID= gql`\n\tquery startupUUID($uuid: String!) {\n\t\tgetStartupByUUID(uuid: $uuid) {\n\t\t\tname\n\t\t\tuuid\n\t}\n}\n`\nexport default function SearchUUID() {\n\tlet navigate = useNavigate();\n\tconst routeChange = (x) => {\n\t  let path = x;\n\t  navigate(path);\n\t};\n\n\tconst [uuid, setName] = useState(\"\")\n\n\tconst [getUUID, { loading, error, data, called }] = useLazyQuery(GET_STARTUPS_UUID, {\n\t\tvariables: {\n\t\t\tuuid\n\t\t}\n\t})\n\n\n\tconsole.log(\n\t\tcalled,\n\t\tloading,\n\t\tdata,\n\t\terror\n\t)\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return (\n\t\t\tconsole.log(JSON.stringify(error, null, 2)),\n\t\t\t<div>\n\t\t\t\t<p>Error :(</p>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('/')}>Home</button>\n\t\t\t</div>\n\t\t\t);\n\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href=\"/\">StartApp</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t\t<br></br>\n\t\t\t<input placeholder=\"Startup UUID\" className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"value={uuid} onChange={(e) => setName(e.target.value)} />\n\t\t\t<br></br>\n\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => getUUID()}>Search</button>\n\t\t\t{loading && <div>spinner</div>}\n\t\t\t{error && <div>error :(</div>}\n\t\t\t{data && (\n\t\t\t\t<div className=\"searchUUID\">\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<p className=\"byUUID\">name: {data.getStartupByUUID.name}</p>\n\t\t\t\t\t<p>uuid: {data.getStartupByUUID.uuid}</p>\n\t\t\t\t</div>\n\n\t\t\t)}\n\t\t\t<br></br>\n\t\t\t<br></br>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('/')}>Home</button>\n\t\t</div>\n\t);\n}\n","import React from 'react'\nimport { gql, useMutation } from \"@apollo/client\"\nimport { useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport {Navbar, Nav, Container } from 'react-bootstrap';\n\nconst CREATE_STARTUP = gql `\n\tmutation CreateStartup($name: String, $website: String, $type: String, $img: String) {\n\t\tcreateStartup(name: $name, website: $website, type: $type, img: $img) {\n\t\t\tname\n\t\t\twebsite\n\t\t\ttype\n\t\t\timg\n\t\t}\n\t}\n`;\n\n\nexport default function CreateStartup() {\n\tlet name, website, type, img;\n\n\tlet navigate = useNavigate();\n\tconst routeChange = (x) => {\n\t  let path = x;\n\t  navigate(path);\n\t};\n\n\tconst [createStartup, {data, loading, error}] = useMutation(CREATE_STARTUP)\n\n\tconsole.log(\n\t\tloading,\n\t\tdata,\n\t\terror\n\t)\n\n\tif (loading) return <p>Loading...</p>;\n\n\tif (error) return (\n\t\t\tconsole.log(JSON.stringify(error, null, 2)),\n\t\t\t<div>\n\t\t\t\t<p>Error  </p>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('/')}>Home</button>\n\t\t\t</div>\n\t)\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href=\"/\">StartApp</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t\t<form onSubmit={ e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tcreateStartup( {\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tname: name.value,\n\t\t\t\t\t\twebsite: website.value,\n\t\t\t\t\t\ttype: type.value,\n\t\t\t\t\t\timg: img.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}>\n\n\t\t\t<input placeholder=\"Startup name\" ref= { value => name = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<input placeholder=\"Startup website\" ref= { value => website = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<input placeholder=\"Startup type\" ref= { value => type = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<input placeholder=\"Startup logo URL\" ref= { value => img = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" type=\"submit\"> Add Startup </button>\n\t\t\t</form>\n\t\t\t<br></br>\n\t\t</div>\n\t);\n}\n","import React from 'react'\nimport { gql, useMutation } from \"@apollo/client\"\nimport { useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport {Navbar, Nav, Container } from 'react-bootstrap';\n\nconst ADD_POSITION = gql `\n\tmutation AddPosition($uuid: String, $title: String, $experience: String, $type: [String]) {\n\t\taddPosition(uuid: $uuid, title: $title, experience: $experience, type: $type) {\n\t\t\tuuid\n\t\t\tpositions {\n\t\t\t\ttitle\n\t\t\t\texperience\n\t\t\t\ttype\n\t\t\t}\n\t\t}\n\t}\n`;\n\n\nexport default function AddPosition() {\n\tlet uuid, title, experience, type;\n\n\tlet navigate = useNavigate();\n\tconst routeChange = (x) => {\n\t  let path = x;\n\t  navigate(path);\n\t};\n\n\tconst [addPosition, {data, loading, error}] = useMutation(ADD_POSITION)\n\n\tconsole.log(\n\t\tloading,\n\t\tdata,\n\t\terror\n\t)\n\n\tif (loading) return <p>Loading...</p>;\n\n\tif (error) return (\n\t\t\tconsole.log(JSON.stringify(error, null, 2)),\n\t\t\t<div>\n\t\t\t\t<p>Error  </p>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('/')}>Home</button>\n\t\t\t</div>\n\t)\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href=\"/\">StartApp</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t\t<form onSubmit={ e => {\n\t\t\t\te.preventDefault();\n\t\t\t\taddPosition( {\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tuuid: uuid.value,\n\t\t\t\t\t\ttitle: title.value,\n\t\t\t\t\t\texperience: experience.value,\n\t\t\t\t\t\ttype: type.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}>\n\n\t\t\t<input placeholder=\"UUID\" ref= { value => uuid = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<input placeholder=\"Title\" ref= { value => title = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<input placeholder=\"Experience\" ref= { value => experience = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<input placeholder=\"Type\" ref= { value => type = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" type=\"submit\"> Add Position </button>\n\t\t\t</form>\n\t\t\t<br></br>\n\t\t</div>\n\t);\n}\n","import React from 'react'\nimport { gql, useMutation } from \"@apollo/client\"\nimport { useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport {Navbar, Nav, Container } from 'react-bootstrap';\n\nconst ADD_POSITION = gql `\n\tmutation AddImg($uuid: String!, $img: String!) {\n\t\taddImg(uuid: $uuid, img: $img) {\n\t\t\tuuid\n\t\t\timg\n\t\t}\n\t}\n`;\n\n\nexport default function AddImg() {\n\tlet uuid, img;\n\n\tlet navigate = useNavigate();\n\tconst routeChange = (x) => {\n\t  let path = x;\n\t  navigate(path);\n\t};\n\n\tconst [addPosition, {data, loading, error}] = useMutation(ADD_POSITION)\n\n\tconsole.log(\n\t\tloading,\n\t\tdata,\n\t\terror\n\t)\n\n\tif (loading) return <p>Loading...</p>;\n\n\tif (error) return (\n\t\t\tconsole.log(JSON.stringify(error, null, 2)),\n\t\t\t<div>\n\t\t\t\t<p>Error  </p>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => routeChange('/')}>Home</button>\n\t\t\t</div>\n\t)\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href=\"/\">StartApp</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t\t<form onSubmit={ e => {\n\t\t\t\te.preventDefault();\n\t\t\t\taddPosition( {\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tuuid: uuid.value,\n\t\t\t\t\t\timg: img.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}>\n\n\t\t\t<input placeholder=\"UUID\" ref= { value => uuid = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<input placeholder=\"Image URL\" ref= { value => img = value } className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></input>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" type=\"submit\"> Add Image </button>\n\t\t\t</form>\n\t\t\t<br></br>\n\t\t</div>\n\t);\n}\n","import './App.css';\nimport StartupList from \"./pages/StartupList\"\nimport Landing from \"./pages/Landing\"\nimport StartupByName from \"./pages/StartupByName\"\nimport SearchName from \"./pages/SearchName\"\nimport SearchUUID from \"./pages/SearchUUID\"\nimport { Routes, Route } from \"react-router-dom\"\nimport CreateStartup from \"./pages/CreateStartup\"\nimport AddPosition from \"./pages/AddPosition\"\nimport AddImg from \"./pages/AddImg\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <StartupList /> */}\n\t  <Routes>\n\t\t  <Route path=\"/\" element={<Landing/>}></Route>\n\t\t  <Route path=\"/list\" element={<StartupList/>}></Route>\n\t\t  <Route path=\"/name\" element={<StartupByName/>}></Route>\n\t\t  <Route path=\"/:name\" element={<StartupByName/>}></Route>\n\t\t  <Route path=\"/name-search\" element={<SearchName/>}></Route>\n\t\t  <Route path=\"/uuid-search\" element={<SearchUUID/>}></Route>\n\t\t  <Route path=\"/create-startup\" element={<CreateStartup/>}></Route>\n\t\t  <Route path=\"/add-position\" element={<AddPosition/>}></Route>\n\t\t  <Route path=\"/add-img\" element={<AddImg/>}></Route>\n\n\t  </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nconst client = new ApolloClient({\n\turi: \"https://www.startapp-api.xyz/graphql\",\n\tcache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <React.StrictMode>\n\t<BrowserRouter>\n\t\t<ApolloProvider client={client}>\n\t\t\t<App />\n\t\t</ApolloProvider>\n\t</BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}